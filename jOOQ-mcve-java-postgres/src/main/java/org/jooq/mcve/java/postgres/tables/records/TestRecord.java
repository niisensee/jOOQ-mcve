/*
 * This file is generated by jOOQ.
 */
package org.jooq.mcve.java.postgres.tables.records;


import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.mcve.java.postgres.tables.Test;
import org.jooq.types.Interval;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TestRecord extends UpdatableRecordImpl<TestRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>mcve.test.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>mcve.test.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>mcve.test.cd</code>.
     */
    public void setCd(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>mcve.test.cd</code>.
     */
    public Integer getCd() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>mcve.test.my_interval</code>.
     */
    public void setMyInterval(Interval value) {
        set(2, value);
    }

    /**
     * Getter for <code>mcve.test.my_interval</code>.
     */
    public Interval getMyInterval() {
        return (Interval) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TestRecord
     */
    public TestRecord() {
        super(Test.TEST);
    }

    /**
     * Create a detached, initialised TestRecord
     */
    public TestRecord(Integer id, Integer cd, Interval myInterval) {
        super(Test.TEST);

        setId(id);
        setCd(cd);
        setMyInterval(myInterval);
        resetChangedOnNotNull();
    }
}
